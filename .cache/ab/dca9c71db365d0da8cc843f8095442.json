{"id":"node_modules/graphql-language-service-interface/dist/getDiagnostics.js","dependencies":[{"name":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql-language-service-interface/dist/getDiagnostics.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/lindsayj/Documents/dev/css-vs-js/package.json","includedInParent":true,"mtime":1572464414593},{"name":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql-language-service-interface/package.json","includedInParent":true,"mtime":1572464394178},{"name":"assert","loc":{"line":6,"column":41},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql-language-service-interface/dist/getDiagnostics.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/assert/assert.js"},{"name":"graphql","loc":{"line":7,"column":26},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql-language-service-interface/dist/getDiagnostics.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/index.mjs"},{"name":"graphql-language-service-parser","loc":{"line":8,"column":50},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql-language-service-interface/dist/getDiagnostics.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql-language-service-parser/dist/index.js"},{"name":"graphql-language-service-utils","loc":{"line":9,"column":49},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql-language-service-interface/dist/getDiagnostics.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql-language-service-utils/dist/index.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst assert_1 = __importDefault(require(\"assert\"));\nconst graphql_1 = require(\"graphql\");\nconst graphql_language_service_parser_1 = require(\"graphql-language-service-parser\");\nconst graphql_language_service_utils_1 = require(\"graphql-language-service-utils\");\nexports.SEVERITY = {\n    ERROR: 1,\n    WARNING: 2,\n    INFORMATION: 3,\n    HINT: 4,\n};\nfunction getDiagnostics(query, schema = null, customRules, isRelayCompatMode) {\n    let ast = null;\n    try {\n        ast = graphql_1.parse(query);\n    }\n    catch (error) {\n        const range = getRange(error.locations[0], query);\n        return [\n            {\n                severity: exports.SEVERITY.ERROR,\n                message: error.message,\n                source: 'GraphQL: Syntax',\n                range,\n            },\n        ];\n    }\n    return validateQuery(ast, schema, customRules, isRelayCompatMode);\n}\nexports.getDiagnostics = getDiagnostics;\nfunction validateQuery(ast, schema = null, customRules, isRelayCompatMode) {\n    if (!schema) {\n        return [];\n    }\n    const validationErrorAnnotations = mapCat(graphql_language_service_utils_1.validateWithCustomRules(schema, ast, customRules, isRelayCompatMode), error => annotations(error, exports.SEVERITY.ERROR, 'Validation'));\n    const deprecationWarningAnnotations = !graphql_1.findDeprecatedUsages\n        ? []\n        : mapCat(graphql_1.findDeprecatedUsages(schema, ast), error => annotations(error, exports.SEVERITY.WARNING, 'Deprecation'));\n    return validationErrorAnnotations.concat(deprecationWarningAnnotations);\n}\nexports.validateQuery = validateQuery;\nfunction mapCat(array, mapper) {\n    return Array.prototype.concat.apply([], array.map(mapper));\n}\nfunction annotations(error, severity, type) {\n    if (!error.nodes) {\n        return [];\n    }\n    return error.nodes.map(node => {\n        const highlightNode = node.kind !== 'Variable' && 'name' in node\n            ? node.name\n            : 'variable' in node\n                ? node.variable\n                : node;\n        assert_1.default(error.locations, 'GraphQL validation error requires locations.');\n        const loc = error.locations[0];\n        const highlightLoc = getLocation(highlightNode);\n        const end = loc.column + (highlightLoc.end - highlightLoc.start);\n        return {\n            source: `GraphQL: ${type}`,\n            message: error.message,\n            severity,\n            range: new graphql_language_service_utils_1.Range(new graphql_language_service_utils_1.Position(loc.line - 1, loc.column - 1), new graphql_language_service_utils_1.Position(loc.line - 1, end)),\n        };\n    });\n}\nfunction getRange(location, queryText) {\n    const parser = graphql_language_service_parser_1.onlineParser();\n    const state = parser.startState();\n    const lines = queryText.split('\\n');\n    assert_1.default(lines.length >= location.line, 'Query text must have more lines than where the error happened');\n    let stream = null;\n    for (let i = 0; i < location.line; i++) {\n        stream = new graphql_language_service_parser_1.CharacterStream(lines[i]);\n        while (!stream.eol()) {\n            const style = parser.token(stream, state);\n            if (style === 'invalidchar') {\n                break;\n            }\n        }\n    }\n    assert_1.default(stream, 'Expected Parser stream to be available.');\n    const line = location.line - 1;\n    const start = stream.getStartOfToken();\n    const end = stream.getCurrentPosition();\n    return new graphql_language_service_utils_1.Range(new graphql_language_service_utils_1.Position(line, start), new graphql_language_service_utils_1.Position(line, end));\n}\nexports.getRange = getRange;\nfunction getLocation(node) {\n    const typeCastedNode = node;\n    const location = typeCastedNode.loc;\n    assert_1.default(location, 'Expected ASTNode to have a location.');\n    return location;\n}\n"},"sourceMaps":{"js":{"version":3,"file":"getDiagnostics.js","sourceRoot":"","sources":["../src/getDiagnostics.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"ebd6bc45550213d792d68f036b8d4f2d","cacheData":{"env":{}}}