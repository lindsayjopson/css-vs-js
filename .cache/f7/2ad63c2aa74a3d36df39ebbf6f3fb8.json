{"id":"node_modules/codemirror-graphql/variables/lint.js","dependencies":[{"name":"/Users/lindsayj/Documents/dev/css-vs-js/package.json","includedInParent":true,"mtime":1572464414593},{"name":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/package.json","includedInParent":true,"mtime":1572464394178},{"name":"codemirror","loc":{"line":3,"column":49},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/variables/lint.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror/lib/codemirror.js"},{"name":"graphql","loc":{"line":5,"column":23},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/variables/lint.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/index.mjs"},{"name":"../utils/jsonParse","loc":{"line":7,"column":48},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/variables/lint.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/utils/jsonParse.js"}],"generated":{"js":"\"use strict\";\n\nvar _codemirror = _interopRequireDefault(require(\"codemirror\"));\n\nvar _graphql = require(\"graphql\");\n\nvar _jsonParse = _interopRequireDefault(require(\"../utils/jsonParse\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * Registers a \"lint\" helper for CodeMirror.\n *\n * Using CodeMirror's \"lint\" addon: https://codemirror.net/demo/lint.html\n * Given the text within an editor, this helper will take that text and return\n * a list of linter issues ensuring that correct variables were provided.\n *\n * Options:\n *\n *   - variableToType: { [variable: string]: GraphQLInputType }\n *\n */\n_codemirror[\"default\"].registerHelper('lint', 'graphql-variables', function (text, options, editor) {\n  // If there's no text, do nothing.\n  if (!text) {\n    return [];\n  } // First, linter needs to determine if there are any parsing errors.\n\n\n  var ast;\n\n  try {\n    ast = (0, _jsonParse[\"default\"])(text);\n  } catch (syntaxError) {\n    if (syntaxError.stack) {\n      throw syntaxError;\n    }\n\n    return [lintError(editor, syntaxError, syntaxError.message)];\n  } // If there are not yet known variables, do nothing.\n\n\n  var variableToType = options.variableToType;\n\n  if (!variableToType) {\n    return [];\n  } // Then highlight any issues with the provided variables.\n\n\n  return validateVariables(editor, variableToType, ast);\n}); // Given a variableToType object, a source text, and a JSON AST, produces a\n// list of CodeMirror annotations for any variable validation errors.\n\n\nfunction validateVariables(editor, variableToType, variablesAST) {\n  var errors = [];\n  variablesAST.members.forEach(function (member) {\n    var variableName = member.key.value;\n    var type = variableToType[variableName];\n\n    if (!type) {\n      errors.push(lintError(editor, member.key, \"Variable \\\"$\".concat(variableName, \"\\\" does not appear in any GraphQL query.\")));\n    } else {\n      validateValue(type, member.value).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            node = _ref2[0],\n            message = _ref2[1];\n\n        errors.push(lintError(editor, node, message));\n      });\n    }\n  });\n  return errors;\n} // Returns a list of validation errors in the form Array<[Node, String]>.\n\n\nfunction validateValue(type, valueAST) {\n  // Validate non-nullable values.\n  if (type instanceof _graphql.GraphQLNonNull) {\n    if (valueAST.kind === 'Null') {\n      return [[valueAST, \"Type \\\"\".concat(type, \"\\\" is non-nullable and cannot be null.\")]];\n    }\n\n    return validateValue(type.ofType, valueAST);\n  }\n\n  if (valueAST.kind === 'Null') {\n    return [];\n  } // Validate lists of values, accepting a non-list as a list of one.\n\n\n  if (type instanceof _graphql.GraphQLList) {\n    var itemType = type.ofType;\n\n    if (valueAST.kind === 'Array') {\n      return mapCat(valueAST.values, function (item) {\n        return validateValue(itemType, item);\n      });\n    }\n\n    return validateValue(itemType, valueAST);\n  } // Validate input objects.\n\n\n  if (type instanceof _graphql.GraphQLInputObjectType) {\n    if (valueAST.kind !== 'Object') {\n      return [[valueAST, \"Type \\\"\".concat(type, \"\\\" must be an Object.\")]];\n    } // Validate each field in the input object.\n\n\n    var providedFields = Object.create(null);\n    var fieldErrors = mapCat(valueAST.members, function (member) {\n      var fieldName = member.key.value;\n      providedFields[fieldName] = true;\n      var inputField = type.getFields()[fieldName];\n\n      if (!inputField) {\n        return [[member.key, \"Type \\\"\".concat(type, \"\\\" does not have a field \\\"\").concat(fieldName, \"\\\".\")]];\n      }\n\n      var fieldType = inputField ? inputField.type : undefined;\n      return validateValue(fieldType, member.value);\n    }); // Look for missing non-nullable fields.\n\n    Object.keys(type.getFields()).forEach(function (fieldName) {\n      if (!providedFields[fieldName]) {\n        var fieldType = type.getFields()[fieldName].type;\n\n        if (fieldType instanceof _graphql.GraphQLNonNull) {\n          fieldErrors.push([valueAST, \"Object of type \\\"\".concat(type, \"\\\" is missing required field \\\"\").concat(fieldName, \"\\\".\")]);\n        }\n      }\n    });\n    return fieldErrors;\n  } // Validate common scalars.\n\n\n  if (type.name === 'Boolean' && valueAST.kind !== 'Boolean' || type.name === 'String' && valueAST.kind !== 'String' || type.name === 'ID' && valueAST.kind !== 'Number' && valueAST.kind !== 'String' || type.name === 'Float' && valueAST.kind !== 'Number' || type.name === 'Int' && ( // eslint-disable-next-line no-bitwise\n  valueAST.kind !== 'Number' || (valueAST.value | 0) !== valueAST.value)) {\n    return [[valueAST, \"Expected value of type \\\"\".concat(type, \"\\\".\")]];\n  } // Validate enums and custom scalars.\n\n\n  if (type instanceof _graphql.GraphQLEnumType || type instanceof _graphql.GraphQLScalarType) {\n    if (valueAST.kind !== 'String' && valueAST.kind !== 'Number' && valueAST.kind !== 'Boolean' && valueAST.kind !== 'Null' || isNullish(type.parseValue(valueAST.value))) {\n      return [[valueAST, \"Expected value of type \\\"\".concat(type, \"\\\".\")]];\n    }\n  }\n\n  return [];\n} // Give a parent text, an AST node with location, and a message, produces a\n// CodeMirror annotation object.\n\n\nfunction lintError(editor, node, message) {\n  return {\n    message: message,\n    severity: 'error',\n    type: 'validation',\n    from: editor.posFromIndex(node.start),\n    to: editor.posFromIndex(node.end)\n  };\n}\n\nfunction isNullish(value) {\n  // eslint-disable-next-line no-self-compare\n  return value === null || value === undefined || value !== value;\n}\n\nfunction mapCat(array, mapper) {\n  return Array.prototype.concat.apply([], array.map(mapper));\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/codemirror-graphql/variables/lint.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}}],"sources":{"node_modules/codemirror-graphql/variables/lint.js":"\"use strict\";\n\nvar _codemirror = _interopRequireDefault(require(\"codemirror\"));\n\nvar _graphql = require(\"graphql\");\n\nvar _jsonParse = _interopRequireDefault(require(\"../utils/jsonParse\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * Registers a \"lint\" helper for CodeMirror.\n *\n * Using CodeMirror's \"lint\" addon: https://codemirror.net/demo/lint.html\n * Given the text within an editor, this helper will take that text and return\n * a list of linter issues ensuring that correct variables were provided.\n *\n * Options:\n *\n *   - variableToType: { [variable: string]: GraphQLInputType }\n *\n */\n_codemirror[\"default\"].registerHelper('lint', 'graphql-variables', function (text, options, editor) {\n  // If there's no text, do nothing.\n  if (!text) {\n    return [];\n  } // First, linter needs to determine if there are any parsing errors.\n\n\n  var ast;\n\n  try {\n    ast = (0, _jsonParse[\"default\"])(text);\n  } catch (syntaxError) {\n    if (syntaxError.stack) {\n      throw syntaxError;\n    }\n\n    return [lintError(editor, syntaxError, syntaxError.message)];\n  } // If there are not yet known variables, do nothing.\n\n\n  var variableToType = options.variableToType;\n\n  if (!variableToType) {\n    return [];\n  } // Then highlight any issues with the provided variables.\n\n\n  return validateVariables(editor, variableToType, ast);\n}); // Given a variableToType object, a source text, and a JSON AST, produces a\n// list of CodeMirror annotations for any variable validation errors.\n\n\nfunction validateVariables(editor, variableToType, variablesAST) {\n  var errors = [];\n  variablesAST.members.forEach(function (member) {\n    var variableName = member.key.value;\n    var type = variableToType[variableName];\n\n    if (!type) {\n      errors.push(lintError(editor, member.key, \"Variable \\\"$\".concat(variableName, \"\\\" does not appear in any GraphQL query.\")));\n    } else {\n      validateValue(type, member.value).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            node = _ref2[0],\n            message = _ref2[1];\n\n        errors.push(lintError(editor, node, message));\n      });\n    }\n  });\n  return errors;\n} // Returns a list of validation errors in the form Array<[Node, String]>.\n\n\nfunction validateValue(type, valueAST) {\n  // Validate non-nullable values.\n  if (type instanceof _graphql.GraphQLNonNull) {\n    if (valueAST.kind === 'Null') {\n      return [[valueAST, \"Type \\\"\".concat(type, \"\\\" is non-nullable and cannot be null.\")]];\n    }\n\n    return validateValue(type.ofType, valueAST);\n  }\n\n  if (valueAST.kind === 'Null') {\n    return [];\n  } // Validate lists of values, accepting a non-list as a list of one.\n\n\n  if (type instanceof _graphql.GraphQLList) {\n    var itemType = type.ofType;\n\n    if (valueAST.kind === 'Array') {\n      return mapCat(valueAST.values, function (item) {\n        return validateValue(itemType, item);\n      });\n    }\n\n    return validateValue(itemType, valueAST);\n  } // Validate input objects.\n\n\n  if (type instanceof _graphql.GraphQLInputObjectType) {\n    if (valueAST.kind !== 'Object') {\n      return [[valueAST, \"Type \\\"\".concat(type, \"\\\" must be an Object.\")]];\n    } // Validate each field in the input object.\n\n\n    var providedFields = Object.create(null);\n    var fieldErrors = mapCat(valueAST.members, function (member) {\n      var fieldName = member.key.value;\n      providedFields[fieldName] = true;\n      var inputField = type.getFields()[fieldName];\n\n      if (!inputField) {\n        return [[member.key, \"Type \\\"\".concat(type, \"\\\" does not have a field \\\"\").concat(fieldName, \"\\\".\")]];\n      }\n\n      var fieldType = inputField ? inputField.type : undefined;\n      return validateValue(fieldType, member.value);\n    }); // Look for missing non-nullable fields.\n\n    Object.keys(type.getFields()).forEach(function (fieldName) {\n      if (!providedFields[fieldName]) {\n        var fieldType = type.getFields()[fieldName].type;\n\n        if (fieldType instanceof _graphql.GraphQLNonNull) {\n          fieldErrors.push([valueAST, \"Object of type \\\"\".concat(type, \"\\\" is missing required field \\\"\").concat(fieldName, \"\\\".\")]);\n        }\n      }\n    });\n    return fieldErrors;\n  } // Validate common scalars.\n\n\n  if (type.name === 'Boolean' && valueAST.kind !== 'Boolean' || type.name === 'String' && valueAST.kind !== 'String' || type.name === 'ID' && valueAST.kind !== 'Number' && valueAST.kind !== 'String' || type.name === 'Float' && valueAST.kind !== 'Number' || type.name === 'Int' && ( // eslint-disable-next-line no-bitwise\n  valueAST.kind !== 'Number' || (valueAST.value | 0) !== valueAST.value)) {\n    return [[valueAST, \"Expected value of type \\\"\".concat(type, \"\\\".\")]];\n  } // Validate enums and custom scalars.\n\n\n  if (type instanceof _graphql.GraphQLEnumType || type instanceof _graphql.GraphQLScalarType) {\n    if (valueAST.kind !== 'String' && valueAST.kind !== 'Number' && valueAST.kind !== 'Boolean' && valueAST.kind !== 'Null' || isNullish(type.parseValue(valueAST.value))) {\n      return [[valueAST, \"Expected value of type \\\"\".concat(type, \"\\\".\")]];\n    }\n  }\n\n  return [];\n} // Give a parent text, an AST node with location, and a message, produces a\n// CodeMirror annotation object.\n\n\nfunction lintError(editor, node, message) {\n  return {\n    message: message,\n    severity: 'error',\n    type: 'validation',\n    from: editor.posFromIndex(node.start),\n    to: editor.posFromIndex(node.end)\n  };\n}\n\nfunction isNullish(value) {\n  // eslint-disable-next-line no-self-compare\n  return value === null || value === undefined || value !== value;\n}\n\nfunction mapCat(array, mapper) {\n  return Array.prototype.concat.apply([], array.map(mapper));\n}"},"lineCount":180}},"error":null,"hash":"7ba89e61846d1b77ccf4e0dd942678a1","cacheData":{"env":{}}}