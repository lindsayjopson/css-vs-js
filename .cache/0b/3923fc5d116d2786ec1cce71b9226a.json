{"id":"node_modules/graphiql/dist/utility/getQueryFacts.js","dependencies":[{"name":"/Users/lindsayj/Documents/dev/css-vs-js/package.json","includedInParent":true,"mtime":1572464414593},{"name":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphiql/package.json","includedInParent":true,"mtime":1572464394178},{"name":"graphql","loc":{"line":9,"column":23},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphiql/dist/utility/getQueryFacts.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/index.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getQueryFacts;\nexports.collectVariables = collectVariables;\n\nvar _graphql = require(\"graphql\");\n\n/**\n *  Copyright (c) 2019 GraphQL Contributors.\n *\n *  This source code is licensed under the MIT license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Provided previous \"queryFacts\", a GraphQL schema, and a query document\n * string, return a set of facts about that query useful for GraphiQL features.\n *\n * If the query cannot be parsed, returns undefined.\n */\nfunction getQueryFacts(schema, documentStr) {\n  if (!documentStr) {\n    return;\n  }\n\n  var documentAST;\n\n  try {\n    documentAST = (0, _graphql.parse)(documentStr);\n  } catch (e) {\n    return;\n  }\n\n  var variableToType = schema ? collectVariables(schema, documentAST) : null; // Collect operations by their names.\n\n  var operations = [];\n  documentAST.definitions.forEach(function (def) {\n    if (def.kind === 'OperationDefinition') {\n      operations.push(def);\n    }\n  });\n  return {\n    variableToType: variableToType,\n    operations: operations\n  };\n}\n/**\n * Provided a schema and a document, produces a `variableToType` Object.\n */\n\n\nfunction collectVariables(schema, documentAST) {\n  var variableToType = Object.create(null);\n  documentAST.definitions.forEach(function (definition) {\n    if (definition.kind === 'OperationDefinition') {\n      var variableDefinitions = definition.variableDefinitions;\n\n      if (variableDefinitions) {\n        variableDefinitions.forEach(function (_ref) {\n          var variable = _ref.variable,\n              type = _ref.type;\n          var inputType = (0, _graphql.typeFromAST)(schema, type);\n\n          if (inputType) {\n            variableToType[variable.name.value] = inputType;\n          }\n        });\n      }\n    }\n  });\n  return variableToType;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/graphiql/dist/utility/getQueryFacts.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}}],"sources":{"node_modules/graphiql/dist/utility/getQueryFacts.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getQueryFacts;\nexports.collectVariables = collectVariables;\n\nvar _graphql = require(\"graphql\");\n\n/**\n *  Copyright (c) 2019 GraphQL Contributors.\n *\n *  This source code is licensed under the MIT license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Provided previous \"queryFacts\", a GraphQL schema, and a query document\n * string, return a set of facts about that query useful for GraphiQL features.\n *\n * If the query cannot be parsed, returns undefined.\n */\nfunction getQueryFacts(schema, documentStr) {\n  if (!documentStr) {\n    return;\n  }\n\n  var documentAST;\n\n  try {\n    documentAST = (0, _graphql.parse)(documentStr);\n  } catch (e) {\n    return;\n  }\n\n  var variableToType = schema ? collectVariables(schema, documentAST) : null; // Collect operations by their names.\n\n  var operations = [];\n  documentAST.definitions.forEach(function (def) {\n    if (def.kind === 'OperationDefinition') {\n      operations.push(def);\n    }\n  });\n  return {\n    variableToType: variableToType,\n    operations: operations\n  };\n}\n/**\n * Provided a schema and a document, produces a `variableToType` Object.\n */\n\n\nfunction collectVariables(schema, documentAST) {\n  var variableToType = Object.create(null);\n  documentAST.definitions.forEach(function (definition) {\n    if (definition.kind === 'OperationDefinition') {\n      var variableDefinitions = definition.variableDefinitions;\n\n      if (variableDefinitions) {\n        variableDefinitions.forEach(function (_ref) {\n          var variable = _ref.variable,\n              type = _ref.type;\n          var inputType = (0, _graphql.typeFromAST)(schema, type);\n\n          if (inputType) {\n            variableToType[variable.name.value] = inputType;\n          }\n        });\n      }\n    }\n  });\n  return variableToType;\n}"},"lineCount":75}},"error":null,"hash":"4822287b6dc52cd0bc4b569585895a63","cacheData":{"env":{}}}