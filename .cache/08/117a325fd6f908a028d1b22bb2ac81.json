{"id":"node_modules/codemirror-graphql/utils/getTypeInfo.js","dependencies":[{"name":"/Users/lindsayj/Documents/dev/css-vs-js/package.json","includedInParent":true,"mtime":1572464414593},{"name":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/package.json","includedInParent":true,"mtime":1572464394178},{"name":"graphql","loc":{"line":8,"column":23},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/utils/getTypeInfo.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/index.mjs"},{"name":"graphql/type/introspection","loc":{"line":10,"column":29},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/utils/getTypeInfo.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/type/introspection.js"},{"name":"./forEachState","loc":{"line":12,"column":51},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/utils/getTypeInfo.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/utils/forEachState.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getTypeInfo;\n\nvar _graphql = require(\"graphql\");\n\nvar _introspection = require(\"graphql/type/introspection\");\n\nvar _forEachState = _interopRequireDefault(require(\"./forEachState\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n *  Copyright (c) 2019 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Utility for collecting rich type information given any token's state\n * from the graphql-mode parser.\n */\nfunction getTypeInfo(schema, tokenState) {\n  var info = {\n    schema: schema,\n    type: null,\n    parentType: null,\n    inputType: null,\n    directiveDef: null,\n    fieldDef: null,\n    argDef: null,\n    argDefs: null,\n    objectFieldDefs: null\n  };\n  (0, _forEachState[\"default\"])(tokenState, function (state) {\n    switch (state.kind) {\n      case 'Query':\n      case 'ShortQuery':\n        info.type = schema.getQueryType();\n        break;\n\n      case 'Mutation':\n        info.type = schema.getMutationType();\n        break;\n\n      case 'Subscription':\n        info.type = schema.getSubscriptionType();\n        break;\n\n      case 'InlineFragment':\n      case 'FragmentDefinition':\n        if (state.type) {\n          info.type = schema.getType(state.type);\n        }\n\n        break;\n\n      case 'Field':\n      case 'AliasedField':\n        info.fieldDef = info.type && state.name ? getFieldDef(schema, info.parentType, state.name) : null;\n        info.type = info.fieldDef && info.fieldDef.type;\n        break;\n\n      case 'SelectionSet':\n        info.parentType = (0, _graphql.getNamedType)(info.type);\n        break;\n\n      case 'Directive':\n        info.directiveDef = state.name && schema.getDirective(state.name);\n        break;\n\n      case 'Arguments':\n        var parentDef = state.prevState.kind === 'Field' ? info.fieldDef : state.prevState.kind === 'Directive' ? info.directiveDef : state.prevState.kind === 'AliasedField' ? state.prevState.name && getFieldDef(schema, info.parentType, state.prevState.name) : null;\n        info.argDefs = parentDef && parentDef.args;\n        break;\n\n      case 'Argument':\n        info.argDef = null;\n\n        if (info.argDefs) {\n          for (var i = 0; i < info.argDefs.length; i++) {\n            if (info.argDefs[i].name === state.name) {\n              info.argDef = info.argDefs[i];\n              break;\n            }\n          }\n        }\n\n        info.inputType = info.argDef && info.argDef.type;\n        break;\n\n      case 'EnumValue':\n        var enumType = (0, _graphql.getNamedType)(info.inputType);\n        info.enumValue = enumType instanceof _graphql.GraphQLEnumType ? find(enumType.getValues(), function (val) {\n          return val.value === state.name;\n        }) : null;\n        break;\n\n      case 'ListValue':\n        var nullableType = (0, _graphql.getNullableType)(info.inputType);\n        info.inputType = nullableType instanceof _graphql.GraphQLList ? nullableType.ofType : null;\n        break;\n\n      case 'ObjectValue':\n        var objectType = (0, _graphql.getNamedType)(info.inputType);\n        info.objectFieldDefs = objectType instanceof _graphql.GraphQLInputObjectType ? objectType.getFields() : null;\n        break;\n\n      case 'ObjectField':\n        var objectField = state.name && info.objectFieldDefs ? info.objectFieldDefs[state.name] : null;\n        info.inputType = objectField && objectField.type;\n        break;\n\n      case 'NamedType':\n        info.type = schema.getType(state.name);\n        break;\n    }\n  });\n  return info;\n} // Gets the field definition given a type and field name\n\n\nfunction getFieldDef(schema, type, fieldName) {\n  if (fieldName === _introspection.SchemaMetaFieldDef.name && schema.getQueryType() === type) {\n    return _introspection.SchemaMetaFieldDef;\n  }\n\n  if (fieldName === _introspection.TypeMetaFieldDef.name && schema.getQueryType() === type) {\n    return _introspection.TypeMetaFieldDef;\n  }\n\n  if (fieldName === _introspection.TypeNameMetaFieldDef.name && (0, _graphql.isCompositeType)(type)) {\n    return _introspection.TypeNameMetaFieldDef;\n  }\n\n  if (type.getFields) {\n    return type.getFields()[fieldName];\n  }\n} // Returns the first item in the array which causes predicate to return truthy.\n\n\nfunction find(array, predicate) {\n  for (var i = 0; i < array.length; i++) {\n    if (predicate(array[i])) {\n      return array[i];\n    }\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/codemirror-graphql/utils/getTypeInfo.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}}],"sources":{"node_modules/codemirror-graphql/utils/getTypeInfo.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getTypeInfo;\n\nvar _graphql = require(\"graphql\");\n\nvar _introspection = require(\"graphql/type/introspection\");\n\nvar _forEachState = _interopRequireDefault(require(\"./forEachState\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n *  Copyright (c) 2019 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Utility for collecting rich type information given any token's state\n * from the graphql-mode parser.\n */\nfunction getTypeInfo(schema, tokenState) {\n  var info = {\n    schema: schema,\n    type: null,\n    parentType: null,\n    inputType: null,\n    directiveDef: null,\n    fieldDef: null,\n    argDef: null,\n    argDefs: null,\n    objectFieldDefs: null\n  };\n  (0, _forEachState[\"default\"])(tokenState, function (state) {\n    switch (state.kind) {\n      case 'Query':\n      case 'ShortQuery':\n        info.type = schema.getQueryType();\n        break;\n\n      case 'Mutation':\n        info.type = schema.getMutationType();\n        break;\n\n      case 'Subscription':\n        info.type = schema.getSubscriptionType();\n        break;\n\n      case 'InlineFragment':\n      case 'FragmentDefinition':\n        if (state.type) {\n          info.type = schema.getType(state.type);\n        }\n\n        break;\n\n      case 'Field':\n      case 'AliasedField':\n        info.fieldDef = info.type && state.name ? getFieldDef(schema, info.parentType, state.name) : null;\n        info.type = info.fieldDef && info.fieldDef.type;\n        break;\n\n      case 'SelectionSet':\n        info.parentType = (0, _graphql.getNamedType)(info.type);\n        break;\n\n      case 'Directive':\n        info.directiveDef = state.name && schema.getDirective(state.name);\n        break;\n\n      case 'Arguments':\n        var parentDef = state.prevState.kind === 'Field' ? info.fieldDef : state.prevState.kind === 'Directive' ? info.directiveDef : state.prevState.kind === 'AliasedField' ? state.prevState.name && getFieldDef(schema, info.parentType, state.prevState.name) : null;\n        info.argDefs = parentDef && parentDef.args;\n        break;\n\n      case 'Argument':\n        info.argDef = null;\n\n        if (info.argDefs) {\n          for (var i = 0; i < info.argDefs.length; i++) {\n            if (info.argDefs[i].name === state.name) {\n              info.argDef = info.argDefs[i];\n              break;\n            }\n          }\n        }\n\n        info.inputType = info.argDef && info.argDef.type;\n        break;\n\n      case 'EnumValue':\n        var enumType = (0, _graphql.getNamedType)(info.inputType);\n        info.enumValue = enumType instanceof _graphql.GraphQLEnumType ? find(enumType.getValues(), function (val) {\n          return val.value === state.name;\n        }) : null;\n        break;\n\n      case 'ListValue':\n        var nullableType = (0, _graphql.getNullableType)(info.inputType);\n        info.inputType = nullableType instanceof _graphql.GraphQLList ? nullableType.ofType : null;\n        break;\n\n      case 'ObjectValue':\n        var objectType = (0, _graphql.getNamedType)(info.inputType);\n        info.objectFieldDefs = objectType instanceof _graphql.GraphQLInputObjectType ? objectType.getFields() : null;\n        break;\n\n      case 'ObjectField':\n        var objectField = state.name && info.objectFieldDefs ? info.objectFieldDefs[state.name] : null;\n        info.inputType = objectField && objectField.type;\n        break;\n\n      case 'NamedType':\n        info.type = schema.getType(state.name);\n        break;\n    }\n  });\n  return info;\n} // Gets the field definition given a type and field name\n\n\nfunction getFieldDef(schema, type, fieldName) {\n  if (fieldName === _introspection.SchemaMetaFieldDef.name && schema.getQueryType() === type) {\n    return _introspection.SchemaMetaFieldDef;\n  }\n\n  if (fieldName === _introspection.TypeMetaFieldDef.name && schema.getQueryType() === type) {\n    return _introspection.TypeMetaFieldDef;\n  }\n\n  if (fieldName === _introspection.TypeNameMetaFieldDef.name && (0, _graphql.isCompositeType)(type)) {\n    return _introspection.TypeNameMetaFieldDef;\n  }\n\n  if (type.getFields) {\n    return type.getFields()[fieldName];\n  }\n} // Returns the first item in the array which causes predicate to return truthy.\n\n\nfunction find(array, predicate) {\n  for (var i = 0; i < array.length; i++) {\n    if (predicate(array[i])) {\n      return array[i];\n    }\n  }\n}"},"lineCount":154}},"error":null,"hash":"e9870fc13bc1c355fc9ecea64bf61d27","cacheData":{"env":{}}}