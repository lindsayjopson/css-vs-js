{"id":"node_modules/codemirror/addon/search/jump-to-line.js","dependencies":[{"name":"/Users/lindsayj/Documents/dev/css-vs-js/package.json","includedInParent":true,"mtime":1572464414593},{"name":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror/package.json","includedInParent":true,"mtime":1572464394178},{"name":"../../lib/codemirror","loc":{"line":8,"column":16},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror/addon/search/jump-to-line.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror/lib/codemirror.js"},{"name":"../dialog/dialog","loc":{"line":8,"column":49},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror/addon/search/jump-to-line.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror/addon/dialog/dialog.js"}],"generated":{"js":"var define;\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Defines jumpToLine command. Uses dialog.js if present.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../dialog/dialog\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../dialog/dialog\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function dialog(cm, text, shortText, deflt, f) {\n    if (cm.openDialog) cm.openDialog(text, f, {value: deflt, selectValueOnOpen: true});\n    else f(prompt(shortText, deflt));\n  }\n\n  function getJumpDialog(cm) {\n    return cm.phrase(\"Jump to line:\") + ' <input type=\"text\" style=\"width: 10em\" class=\"CodeMirror-search-field\"/> <span style=\"color: #888\" class=\"CodeMirror-search-hint\">' + cm.phrase(\"(Use line:column or scroll% syntax)\") + '</span>';\n  }\n\n  function interpretLine(cm, string) {\n    var num = Number(string)\n    if (/^[-+]/.test(string)) return cm.getCursor().line + num\n    else return num - 1\n  }\n\n  CodeMirror.commands.jumpToLine = function(cm) {\n    var cur = cm.getCursor();\n    dialog(cm, getJumpDialog(cm), cm.phrase(\"Jump to line:\"), (cur.line + 1) + \":\" + cur.ch, function(posStr) {\n      if (!posStr) return;\n\n      var match;\n      if (match = /^\\s*([\\+\\-]?\\d+)\\s*\\:\\s*(\\d+)\\s*$/.exec(posStr)) {\n        cm.setCursor(interpretLine(cm, match[1]), Number(match[2]))\n      } else if (match = /^\\s*([\\+\\-]?\\d+(\\.\\d+)?)\\%\\s*/.exec(posStr)) {\n        var line = Math.round(cm.lineCount() * Number(match[1]) / 100);\n        if (/^[-+]/.test(match[1])) line = cur.line + line + 1;\n        cm.setCursor(line - 1, cur.ch);\n      } else if (match = /^\\s*\\:?\\s*([\\+\\-]?\\d+)\\s*/.exec(posStr)) {\n        cm.setCursor(interpretLine(cm, match[1]), cur.ch);\n      }\n    });\n  };\n\n  CodeMirror.keyMap[\"default\"][\"Alt-G\"] = \"jumpToLine\";\n});\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/codemirror/addon/search/jump-to-line.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}}],"sources":{"node_modules/codemirror/addon/search/jump-to-line.js":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Defines jumpToLine command. Uses dialog.js if present.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../dialog/dialog\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../dialog/dialog\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function dialog(cm, text, shortText, deflt, f) {\n    if (cm.openDialog) cm.openDialog(text, f, {value: deflt, selectValueOnOpen: true});\n    else f(prompt(shortText, deflt));\n  }\n\n  function getJumpDialog(cm) {\n    return cm.phrase(\"Jump to line:\") + ' <input type=\"text\" style=\"width: 10em\" class=\"CodeMirror-search-field\"/> <span style=\"color: #888\" class=\"CodeMirror-search-hint\">' + cm.phrase(\"(Use line:column or scroll% syntax)\") + '</span>';\n  }\n\n  function interpretLine(cm, string) {\n    var num = Number(string)\n    if (/^[-+]/.test(string)) return cm.getCursor().line + num\n    else return num - 1\n  }\n\n  CodeMirror.commands.jumpToLine = function(cm) {\n    var cur = cm.getCursor();\n    dialog(cm, getJumpDialog(cm), cm.phrase(\"Jump to line:\"), (cur.line + 1) + \":\" + cur.ch, function(posStr) {\n      if (!posStr) return;\n\n      var match;\n      if (match = /^\\s*([\\+\\-]?\\d+)\\s*\\:\\s*(\\d+)\\s*$/.exec(posStr)) {\n        cm.setCursor(interpretLine(cm, match[1]), Number(match[2]))\n      } else if (match = /^\\s*([\\+\\-]?\\d+(\\.\\d+)?)\\%\\s*/.exec(posStr)) {\n        var line = Math.round(cm.lineCount() * Number(match[1]) / 100);\n        if (/^[-+]/.test(match[1])) line = cur.line + line + 1;\n        cm.setCursor(line - 1, cur.ch);\n      } else if (match = /^\\s*\\:?\\s*([\\+\\-]?\\d+)\\s*/.exec(posStr)) {\n        cm.setCursor(interpretLine(cm, match[1]), cur.ch);\n      }\n    });\n  };\n\n  CodeMirror.keyMap[\"default\"][\"Alt-G\"] = \"jumpToLine\";\n});\n"},"lineCount":52}},"error":null,"hash":"82b0676c0e460ee557f17eeb405c1dc8","cacheData":{"env":{}}}