{"id":"node_modules/graphiql/dist/utility/mergeAst.js","dependencies":[{"name":"/Users/lindsayj/Documents/dev/css-vs-js/package.json","includedInParent":true,"mtime":1572464414593},{"name":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphiql/package.json","includedInParent":true,"mtime":1572464394178},{"name":"graphql/language/kinds","loc":{"line":8,"column":21},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphiql/dist/utility/mergeAst.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/language/kinds.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeAst = mergeAst;\n\nvar _kinds = require(\"graphql/language/kinds\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction resolveDefinition(fragments, obj) {\n  var definition = obj;\n\n  if (definition.kind === _kinds.Kind.FRAGMENT_SPREAD) {\n    definition = fragments[definition.name.value];\n  }\n\n  if (definition.selectionSet) {\n    definition.selectionSet.selections = definition.selectionSet.selections.filter(function (selection, idx, self) {\n      return selection.kind !== _kinds.Kind.FRAGMENT_SPREAD || idx === self.findIndex(function (_selection) {\n        return _selection.kind === _kinds.Kind.FRAGMENT_SPREAD && selection.name.value === _selection.name.value;\n      });\n    }).map(function (selection) {\n      return resolveDefinition(fragments, selection);\n    });\n  }\n\n  return definition;\n}\n\nfunction mergeAst(queryAst) {\n  var fragments = {};\n  queryAst.definitions.filter(function (elem) {\n    return elem.kind === _kinds.Kind.FRAGMENT_DEFINITION;\n  }).forEach(function (frag) {\n    var copyFragment = _objectSpread({}, frag);\n\n    copyFragment.kind = _kinds.Kind.INLINE_FRAGMENT;\n    fragments[frag.name.value] = copyFragment;\n  });\n\n  var copyAst = _objectSpread({}, queryAst);\n\n  copyAst.definitions = queryAst.definitions.filter(function (elem) {\n    return elem.kind !== _kinds.Kind.FRAGMENT_DEFINITION;\n  }).map(function (op) {\n    return resolveDefinition(fragments, op);\n  });\n  return copyAst;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/graphiql/dist/utility/mergeAst.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}}],"sources":{"node_modules/graphiql/dist/utility/mergeAst.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeAst = mergeAst;\n\nvar _kinds = require(\"graphql/language/kinds\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction resolveDefinition(fragments, obj) {\n  var definition = obj;\n\n  if (definition.kind === _kinds.Kind.FRAGMENT_SPREAD) {\n    definition = fragments[definition.name.value];\n  }\n\n  if (definition.selectionSet) {\n    definition.selectionSet.selections = definition.selectionSet.selections.filter(function (selection, idx, self) {\n      return selection.kind !== _kinds.Kind.FRAGMENT_SPREAD || idx === self.findIndex(function (_selection) {\n        return _selection.kind === _kinds.Kind.FRAGMENT_SPREAD && selection.name.value === _selection.name.value;\n      });\n    }).map(function (selection) {\n      return resolveDefinition(fragments, selection);\n    });\n  }\n\n  return definition;\n}\n\nfunction mergeAst(queryAst) {\n  var fragments = {};\n  queryAst.definitions.filter(function (elem) {\n    return elem.kind === _kinds.Kind.FRAGMENT_DEFINITION;\n  }).forEach(function (frag) {\n    var copyFragment = _objectSpread({}, frag);\n\n    copyFragment.kind = _kinds.Kind.INLINE_FRAGMENT;\n    fragments[frag.name.value] = copyFragment;\n  });\n\n  var copyAst = _objectSpread({}, queryAst);\n\n  copyAst.definitions = queryAst.definitions.filter(function (elem) {\n    return elem.kind !== _kinds.Kind.FRAGMENT_DEFINITION;\n  }).map(function (op) {\n    return resolveDefinition(fragments, op);\n  });\n  return copyAst;\n}"},"lineCount":55}},"error":null,"hash":"8cd7fd1b88d779596eaeb74715c68294","cacheData":{"env":{}}}