{"id":"node_modules/codemirror-graphql/variables/hint.js","dependencies":[{"name":"/Users/lindsayj/Documents/dev/css-vs-js/package.json","includedInParent":true,"mtime":1572464414593},{"name":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/package.json","includedInParent":true,"mtime":1572464394178},{"name":"codemirror","loc":{"line":3,"column":49},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/variables/hint.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror/lib/codemirror.js"},{"name":"graphql","loc":{"line":5,"column":23},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/variables/hint.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/index.mjs"},{"name":"../utils/forEachState","loc":{"line":7,"column":51},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/variables/hint.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/utils/forEachState.js"},{"name":"../utils/hintList","loc":{"line":9,"column":47},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/variables/hint.js","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/utils/hintList.js"}],"generated":{"js":"\"use strict\";\n\nvar _codemirror = _interopRequireDefault(require(\"codemirror\"));\n\nvar _graphql = require(\"graphql\");\n\nvar _forEachState = _interopRequireDefault(require(\"../utils/forEachState\"));\n\nvar _hintList = _interopRequireDefault(require(\"../utils/hintList\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n *  Copyright (c) 2019 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Registers a \"hint\" helper for CodeMirror.\n *\n * Using CodeMirror's \"hint\" addon: https://codemirror.net/demo/complete.html\n * Given an editor, this helper will take the token at the cursor and return a\n * list of suggested tokens.\n *\n * Options:\n *\n *   - variableToType: { [variable: string]: GraphQLInputType }\n *\n * Additional Events:\n *\n *   - hasCompletion (codemirror, data, token) - signaled when the hinter has a\n *     new list of completion suggestions.\n *\n */\n_codemirror[\"default\"].registerHelper('hint', 'graphql-variables', function (editor, options) {\n  var cur = editor.getCursor();\n  var token = editor.getTokenAt(cur);\n  var results = getVariablesHint(cur, token, options);\n\n  if (results && results.list && results.list.length > 0) {\n    results.from = _codemirror[\"default\"].Pos(results.from.line, results.from.column);\n    results.to = _codemirror[\"default\"].Pos(results.to.line, results.to.column);\n\n    _codemirror[\"default\"].signal(editor, 'hasCompletion', editor, results, token);\n  }\n\n  return results;\n});\n\nfunction getVariablesHint(cur, token, options) {\n  // If currently parsing an invalid state, attempt to hint to the prior state.\n  var state = token.state.kind === 'Invalid' ? token.state.prevState : token.state;\n  var kind = state.kind;\n  var step = state.step; // Variables can only be an object literal.\n\n  if (kind === 'Document' && step === 0) {\n    return (0, _hintList[\"default\"])(cur, token, [{\n      text: '{'\n    }]);\n  }\n\n  var variableToType = options.variableToType;\n\n  if (!variableToType) {\n    return;\n  }\n\n  var typeInfo = getTypeInfo(variableToType, token.state); // Top level should typeahead possible variables.\n\n  if (kind === 'Document' || kind === 'Variable' && step === 0) {\n    var variableNames = Object.keys(variableToType);\n    return (0, _hintList[\"default\"])(cur, token, variableNames.map(function (name) {\n      return {\n        text: \"\\\"\".concat(name, \"\\\": \"),\n        type: variableToType[name]\n      };\n    }));\n  } // Input Object fields\n\n\n  if (kind === 'ObjectValue' || kind === 'ObjectField' && step === 0) {\n    if (typeInfo.fields) {\n      var inputFields = Object.keys(typeInfo.fields).map(function (fieldName) {\n        return typeInfo.fields[fieldName];\n      });\n      return (0, _hintList[\"default\"])(cur, token, inputFields.map(function (field) {\n        return {\n          text: \"\\\"\".concat(field.name, \"\\\": \"),\n          type: field.type,\n          description: field.description\n        };\n      }));\n    }\n  } // Input values.\n\n\n  if (kind === 'StringValue' || kind === 'NumberValue' || kind === 'BooleanValue' || kind === 'NullValue' || kind === 'ListValue' && step === 1 || kind === 'ObjectField' && step === 2 || kind === 'Variable' && step === 2) {\n    var namedInputType = (0, _graphql.getNamedType)(typeInfo.type);\n\n    if (namedInputType instanceof _graphql.GraphQLInputObjectType) {\n      return (0, _hintList[\"default\"])(cur, token, [{\n        text: '{'\n      }]);\n    } else if (namedInputType instanceof _graphql.GraphQLEnumType) {\n      var valueMap = namedInputType.getValues();\n      var values = Object.keys(valueMap).map(function (name) {\n        return valueMap[name];\n      });\n      return (0, _hintList[\"default\"])(cur, token, values.map(function (value) {\n        return {\n          text: \"\\\"\".concat(value.name, \"\\\"\"),\n          type: namedInputType,\n          description: value.description\n        };\n      }));\n    } else if (namedInputType === _graphql.GraphQLBoolean) {\n      return (0, _hintList[\"default\"])(cur, token, [{\n        text: 'true',\n        type: _graphql.GraphQLBoolean,\n        description: 'Not false.'\n      }, {\n        text: 'false',\n        type: _graphql.GraphQLBoolean,\n        description: 'Not true.'\n      }]);\n    }\n  }\n} // Utility for collecting rich type information given any token's state\n// from the graphql-variables-mode parser.\n\n\nfunction getTypeInfo(variableToType, tokenState) {\n  var info = {\n    type: null,\n    fields: null\n  };\n  (0, _forEachState[\"default\"])(tokenState, function (state) {\n    if (state.kind === 'Variable') {\n      info.type = variableToType[state.name];\n    } else if (state.kind === 'ListValue') {\n      var nullableType = (0, _graphql.getNullableType)(info.type);\n      info.type = nullableType instanceof _graphql.GraphQLList ? nullableType.ofType : null;\n    } else if (state.kind === 'ObjectValue') {\n      var objectType = (0, _graphql.getNamedType)(info.type);\n      info.fields = objectType instanceof _graphql.GraphQLInputObjectType ? objectType.getFields() : null;\n    } else if (state.kind === 'ObjectField') {\n      var objectField = state.name && info.fields ? info.fields[state.name] : null;\n      info.type = objectField && objectField.type;\n    }\n  });\n  return info;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/codemirror-graphql/variables/hint.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}}],"sources":{"node_modules/codemirror-graphql/variables/hint.js":"\"use strict\";\n\nvar _codemirror = _interopRequireDefault(require(\"codemirror\"));\n\nvar _graphql = require(\"graphql\");\n\nvar _forEachState = _interopRequireDefault(require(\"../utils/forEachState\"));\n\nvar _hintList = _interopRequireDefault(require(\"../utils/hintList\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n *  Copyright (c) 2019 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Registers a \"hint\" helper for CodeMirror.\n *\n * Using CodeMirror's \"hint\" addon: https://codemirror.net/demo/complete.html\n * Given an editor, this helper will take the token at the cursor and return a\n * list of suggested tokens.\n *\n * Options:\n *\n *   - variableToType: { [variable: string]: GraphQLInputType }\n *\n * Additional Events:\n *\n *   - hasCompletion (codemirror, data, token) - signaled when the hinter has a\n *     new list of completion suggestions.\n *\n */\n_codemirror[\"default\"].registerHelper('hint', 'graphql-variables', function (editor, options) {\n  var cur = editor.getCursor();\n  var token = editor.getTokenAt(cur);\n  var results = getVariablesHint(cur, token, options);\n\n  if (results && results.list && results.list.length > 0) {\n    results.from = _codemirror[\"default\"].Pos(results.from.line, results.from.column);\n    results.to = _codemirror[\"default\"].Pos(results.to.line, results.to.column);\n\n    _codemirror[\"default\"].signal(editor, 'hasCompletion', editor, results, token);\n  }\n\n  return results;\n});\n\nfunction getVariablesHint(cur, token, options) {\n  // If currently parsing an invalid state, attempt to hint to the prior state.\n  var state = token.state.kind === 'Invalid' ? token.state.prevState : token.state;\n  var kind = state.kind;\n  var step = state.step; // Variables can only be an object literal.\n\n  if (kind === 'Document' && step === 0) {\n    return (0, _hintList[\"default\"])(cur, token, [{\n      text: '{'\n    }]);\n  }\n\n  var variableToType = options.variableToType;\n\n  if (!variableToType) {\n    return;\n  }\n\n  var typeInfo = getTypeInfo(variableToType, token.state); // Top level should typeahead possible variables.\n\n  if (kind === 'Document' || kind === 'Variable' && step === 0) {\n    var variableNames = Object.keys(variableToType);\n    return (0, _hintList[\"default\"])(cur, token, variableNames.map(function (name) {\n      return {\n        text: \"\\\"\".concat(name, \"\\\": \"),\n        type: variableToType[name]\n      };\n    }));\n  } // Input Object fields\n\n\n  if (kind === 'ObjectValue' || kind === 'ObjectField' && step === 0) {\n    if (typeInfo.fields) {\n      var inputFields = Object.keys(typeInfo.fields).map(function (fieldName) {\n        return typeInfo.fields[fieldName];\n      });\n      return (0, _hintList[\"default\"])(cur, token, inputFields.map(function (field) {\n        return {\n          text: \"\\\"\".concat(field.name, \"\\\": \"),\n          type: field.type,\n          description: field.description\n        };\n      }));\n    }\n  } // Input values.\n\n\n  if (kind === 'StringValue' || kind === 'NumberValue' || kind === 'BooleanValue' || kind === 'NullValue' || kind === 'ListValue' && step === 1 || kind === 'ObjectField' && step === 2 || kind === 'Variable' && step === 2) {\n    var namedInputType = (0, _graphql.getNamedType)(typeInfo.type);\n\n    if (namedInputType instanceof _graphql.GraphQLInputObjectType) {\n      return (0, _hintList[\"default\"])(cur, token, [{\n        text: '{'\n      }]);\n    } else if (namedInputType instanceof _graphql.GraphQLEnumType) {\n      var valueMap = namedInputType.getValues();\n      var values = Object.keys(valueMap).map(function (name) {\n        return valueMap[name];\n      });\n      return (0, _hintList[\"default\"])(cur, token, values.map(function (value) {\n        return {\n          text: \"\\\"\".concat(value.name, \"\\\"\"),\n          type: namedInputType,\n          description: value.description\n        };\n      }));\n    } else if (namedInputType === _graphql.GraphQLBoolean) {\n      return (0, _hintList[\"default\"])(cur, token, [{\n        text: 'true',\n        type: _graphql.GraphQLBoolean,\n        description: 'Not false.'\n      }, {\n        text: 'false',\n        type: _graphql.GraphQLBoolean,\n        description: 'Not true.'\n      }]);\n    }\n  }\n} // Utility for collecting rich type information given any token's state\n// from the graphql-variables-mode parser.\n\n\nfunction getTypeInfo(variableToType, tokenState) {\n  var info = {\n    type: null,\n    fields: null\n  };\n  (0, _forEachState[\"default\"])(tokenState, function (state) {\n    if (state.kind === 'Variable') {\n      info.type = variableToType[state.name];\n    } else if (state.kind === 'ListValue') {\n      var nullableType = (0, _graphql.getNullableType)(info.type);\n      info.type = nullableType instanceof _graphql.GraphQLList ? nullableType.ofType : null;\n    } else if (state.kind === 'ObjectValue') {\n      var objectType = (0, _graphql.getNamedType)(info.type);\n      info.fields = objectType instanceof _graphql.GraphQLInputObjectType ? objectType.getFields() : null;\n    } else if (state.kind === 'ObjectField') {\n      var objectField = state.name && info.fields ? info.fields[state.name] : null;\n      info.type = objectField && objectField.type;\n    }\n  });\n  return info;\n}"},"lineCount":156}},"error":null,"hash":"c14ff0ae0f34d0d6ea31faac4771fd07","cacheData":{"env":{}}}