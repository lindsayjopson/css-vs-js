{"id":"node_modules/graphql/utilities/introspectionFromSchema.mjs","dependencies":[{"name":"/Users/lindsayj/Documents/dev/css-vs-js/package.json","includedInParent":true,"mtime":1572464414593},{"name":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/package.json","includedInParent":true,"mtime":1572464423010},{"name":"../jsutils/invariant","loc":{"line":1,"column":22},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/utilities/introspectionFromSchema.mjs","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/jsutils/invariant.js"},{"name":"../jsutils/isPromise","loc":{"line":2,"column":22},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/utilities/introspectionFromSchema.mjs","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/jsutils/isPromise.mjs"},{"name":"../language/parser","loc":{"line":3,"column":22},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/utilities/introspectionFromSchema.mjs","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/language/parser.mjs"},{"name":"../execution/execute","loc":{"line":4,"column":24},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/utilities/introspectionFromSchema.mjs","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/execution/execute.mjs"},{"name":"./introspectionQuery","loc":{"line":5,"column":38},"parent":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/utilities/introspectionFromSchema.mjs","resolved":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/graphql/utilities/introspectionQuery.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.introspectionFromSchema = introspectionFromSchema;\n\nvar _invariant = _interopRequireDefault(require(\"../jsutils/invariant\"));\n\nvar _isPromise = _interopRequireDefault(require(\"../jsutils/isPromise\"));\n\nvar _parser = require(\"../language/parser\");\n\nvar _execute = require(\"../execution/execute\");\n\nvar _introspectionQuery = require(\"./introspectionQuery\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\nfunction introspectionFromSchema(schema, options) {\n  var queryAST = (0, _parser.parse)((0, _introspectionQuery.getIntrospectionQuery)(options));\n  var result = (0, _execute.execute)(schema, queryAST);\n  /* istanbul ignore next */\n\n  !(0, _isPromise.default)(result) && !result.errors && result.data || (0, _invariant.default)(0);\n  return result.data;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":5,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":6,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":16,"column":7}},{"name":"introspectionFromSchema","generated":{"line":29,"column":9},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":16,"column":16}},{"generated":{"line":29,"column":32},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":16,"column":7}},{"name":"schema","generated":{"line":29,"column":33},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":16,"column":40}},{"generated":{"line":29,"column":39},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":16,"column":7}},{"name":"options","generated":{"line":29,"column":41},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":16,"column":48}},{"generated":{"line":29,"column":48},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":16,"column":7}},{"generated":{"line":29,"column":50},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":16,"column":57}},{"generated":{"line":30,"column":0},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":17,"column":2}},{"name":"queryAST","generated":{"line":30,"column":6},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":17,"column":6}},{"generated":{"line":30,"column":14},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":17,"column":14}},{"generated":{"line":30,"column":17},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":17,"column":17}},{"generated":{"line":30,"column":36},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":17,"column":23}},{"name":"options","generated":{"line":30,"column":83},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":17,"column":45}},{"generated":{"line":30,"column":90},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":17,"column":23}},{"generated":{"line":30,"column":91},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":17,"column":17}},{"generated":{"line":30,"column":92},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":17,"column":2}},{"generated":{"line":31,"column":0},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":18,"column":2}},{"name":"result","generated":{"line":31,"column":6},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":18,"column":6}},{"generated":{"line":31,"column":12},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":18,"column":12}},{"generated":{"line":31,"column":15},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":18,"column":15}},{"name":"schema","generated":{"line":31,"column":37},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":18,"column":23}},{"generated":{"line":31,"column":43},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":18,"column":15}},{"name":"queryAST","generated":{"line":31,"column":45},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":18,"column":31}},{"generated":{"line":31,"column":53},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":18,"column":15}},{"generated":{"line":31,"column":54},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":18,"column":2}},{"generated":{"line":32,"column":0},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":20,"column":2}},{"generated":{"line":34,"column":0},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":2}},{"generated":{"line":34,"column":3},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":3}},{"name":"result","generated":{"line":34,"column":27},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":13}},{"generated":{"line":34,"column":33},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":3}},{"generated":{"line":34,"column":34},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":2}},{"generated":{"line":34,"column":38},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":24}},{"name":"result","generated":{"line":34,"column":39},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":25}},{"generated":{"line":34,"column":45},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":31}},{"name":"errors","generated":{"line":34,"column":46},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":32}},{"generated":{"line":34,"column":52},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":2}},{"name":"result","generated":{"line":34,"column":56},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":42}},{"generated":{"line":34,"column":62},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":48}},{"name":"data","generated":{"line":34,"column":63},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":49}},{"generated":{"line":34,"column":67},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":2}},{"generated":{"line":34,"column":71},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":57}},{"generated":{"line":34,"column":95},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":67}},{"generated":{"line":34,"column":96},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":57}},{"generated":{"line":34,"column":97},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":21,"column":2}},{"generated":{"line":35,"column":0},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":22,"column":2}},{"name":"result","generated":{"line":35,"column":9},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":22,"column":9}},{"generated":{"line":35,"column":15},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":22,"column":15}},{"name":"data","generated":{"line":35,"column":16},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":22,"column":16}},{"generated":{"line":35,"column":20},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":22,"column":2}},{"generated":{"line":36,"column":0},"source":"node_modules/graphql/utilities/introspectionFromSchema.mjs","original":{"line":23,"column":1}}],"sources":{"node_modules/graphql/utilities/introspectionFromSchema.mjs":"import invariant from '../jsutils/invariant';\nimport isPromise from '../jsutils/isPromise';\nimport { parse } from '../language/parser';\nimport { execute } from '../execution/execute';\nimport { getIntrospectionQuery } from './introspectionQuery';\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\n\nexport function introspectionFromSchema(schema, options) {\n  var queryAST = parse(getIntrospectionQuery(options));\n  var result = execute(schema, queryAST);\n\n  /* istanbul ignore next */\n  !isPromise(result) && !result.errors && result.data || invariant(0);\n  return result.data;\n}\n"},"lineCount":null}},"error":null,"hash":"c28932c883817cb6922b82e5206d0bb8","cacheData":{"env":{}}}