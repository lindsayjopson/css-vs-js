{"id":"node_modules/codemirror-graphql/utils/hintList.js","dependencies":[{"name":"/Users/lindsayj/Documents/dev/css-vs-js/package.json","includedInParent":true,"mtime":1572464414593},{"name":"/Users/lindsayj/Documents/dev/css-vs-js/node_modules/codemirror-graphql/package.json","includedInParent":true,"mtime":1572464394178}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = hintList;\n\n/**\n *  Copyright (c) 2019 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n// Create the expected hint response given a possible list and a token\nfunction hintList(cursor, token, list) {\n  var hints = filterAndSortList(list, normalizeText(token.string));\n\n  if (!hints) {\n    return;\n  }\n\n  var tokenStart = token.type !== null && /\"|\\w/.test(token.string[0]) ? token.start : token.end;\n  return {\n    list: hints,\n    from: {\n      line: cursor.line,\n      column: tokenStart\n    },\n    to: {\n      line: cursor.line,\n      column: token.end\n    }\n  };\n} // Given a list of hint entries and currently typed text, sort and filter to\n// provide a concise list.\n\n\nfunction filterAndSortList(list, text) {\n  if (!text) {\n    return filterNonEmpty(list, function (entry) {\n      return !entry.isDeprecated;\n    });\n  }\n\n  var byProximity = list.map(function (entry) {\n    return {\n      proximity: getProximity(normalizeText(entry.text), text),\n      entry: entry\n    };\n  });\n  var conciseMatches = filterNonEmpty(filterNonEmpty(byProximity, function (pair) {\n    return pair.proximity <= 2;\n  }), function (pair) {\n    return !pair.entry.isDeprecated;\n  });\n  var sortedMatches = conciseMatches.sort(function (a, b) {\n    return (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) || a.proximity - b.proximity || a.entry.text.length - b.entry.text.length;\n  });\n  return sortedMatches.map(function (pair) {\n    return pair.entry;\n  });\n} // Filters the array by the predicate, unless it results in an empty array,\n// in which case return the original array.\n\n\nfunction filterNonEmpty(array, predicate) {\n  var filtered = array.filter(predicate);\n  return filtered.length === 0 ? array : filtered;\n}\n\nfunction normalizeText(text) {\n  return text.toLowerCase().replace(/\\W/g, '');\n} // Determine a numeric proximity for a suggestion based on current text.\n\n\nfunction getProximity(suggestion, text) {\n  // start with lexical distance\n  var proximity = lexicalDistance(text, suggestion);\n\n  if (suggestion.length > text.length) {\n    // do not penalize long suggestions.\n    proximity -= suggestion.length - text.length - 1; // penalize suggestions not starting with this phrase\n\n    proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n  }\n\n  return proximity;\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * This distance can be useful for detecting typos in input or sorting\n *\n * @param {string} a\n * @param {string} b\n * @return {int} distance in number of edits\n */\n\n\nfunction lexicalDistance(a, b) {\n  var i;\n  var j;\n  var d = [];\n  var aLength = a.length;\n  var bLength = b.length;\n\n  for (i = 0; i <= aLength; i++) {\n    d[i] = [i];\n  }\n\n  for (j = 1; j <= bLength; j++) {\n    d[0][j] = j;\n  }\n\n  for (i = 1; i <= aLength; i++) {\n    for (j = 1; j <= bLength; j++) {\n      var cost = a[i - 1] === b[j - 1] ? 0 : 1;\n      d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n      }\n    }\n  }\n\n  return d[aLength][bLength];\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/codemirror-graphql/utils/hintList.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}}],"sources":{"node_modules/codemirror-graphql/utils/hintList.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = hintList;\n\n/**\n *  Copyright (c) 2019 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n// Create the expected hint response given a possible list and a token\nfunction hintList(cursor, token, list) {\n  var hints = filterAndSortList(list, normalizeText(token.string));\n\n  if (!hints) {\n    return;\n  }\n\n  var tokenStart = token.type !== null && /\"|\\w/.test(token.string[0]) ? token.start : token.end;\n  return {\n    list: hints,\n    from: {\n      line: cursor.line,\n      column: tokenStart\n    },\n    to: {\n      line: cursor.line,\n      column: token.end\n    }\n  };\n} // Given a list of hint entries and currently typed text, sort and filter to\n// provide a concise list.\n\n\nfunction filterAndSortList(list, text) {\n  if (!text) {\n    return filterNonEmpty(list, function (entry) {\n      return !entry.isDeprecated;\n    });\n  }\n\n  var byProximity = list.map(function (entry) {\n    return {\n      proximity: getProximity(normalizeText(entry.text), text),\n      entry: entry\n    };\n  });\n  var conciseMatches = filterNonEmpty(filterNonEmpty(byProximity, function (pair) {\n    return pair.proximity <= 2;\n  }), function (pair) {\n    return !pair.entry.isDeprecated;\n  });\n  var sortedMatches = conciseMatches.sort(function (a, b) {\n    return (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) || a.proximity - b.proximity || a.entry.text.length - b.entry.text.length;\n  });\n  return sortedMatches.map(function (pair) {\n    return pair.entry;\n  });\n} // Filters the array by the predicate, unless it results in an empty array,\n// in which case return the original array.\n\n\nfunction filterNonEmpty(array, predicate) {\n  var filtered = array.filter(predicate);\n  return filtered.length === 0 ? array : filtered;\n}\n\nfunction normalizeText(text) {\n  return text.toLowerCase().replace(/\\W/g, '');\n} // Determine a numeric proximity for a suggestion based on current text.\n\n\nfunction getProximity(suggestion, text) {\n  // start with lexical distance\n  var proximity = lexicalDistance(text, suggestion);\n\n  if (suggestion.length > text.length) {\n    // do not penalize long suggestions.\n    proximity -= suggestion.length - text.length - 1; // penalize suggestions not starting with this phrase\n\n    proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n  }\n\n  return proximity;\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * This distance can be useful for detecting typos in input or sorting\n *\n * @param {string} a\n * @param {string} b\n * @return {int} distance in number of edits\n */\n\n\nfunction lexicalDistance(a, b) {\n  var i;\n  var j;\n  var d = [];\n  var aLength = a.length;\n  var bLength = b.length;\n\n  for (i = 0; i <= aLength; i++) {\n    d[i] = [i];\n  }\n\n  for (j = 1; j <= bLength; j++) {\n    d[0][j] = j;\n  }\n\n  for (i = 1; i <= aLength; i++) {\n    for (j = 1; j <= bLength; j++) {\n      var cost = a[i - 1] === b[j - 1] ? 0 : 1;\n      d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n      }\n    }\n  }\n\n  return d[aLength][bLength];\n}"},"lineCount":134}},"error":null,"hash":"ede429eeda18a4dc1af417603d909a01","cacheData":{"env":{}}}